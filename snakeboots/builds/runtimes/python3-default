#!/usr/bin/env bash
# Build Path: /app/.heroku/python/

OUT_PREFIX=$1
VERSION=${2#python-}
BIN_DIR="$(cd "$(dirname "$0")"/../.. || exit; pwd)/bin"
export BIN_DIR

# install the necessary sqlite headers
apt-get update
apt-get install libsqlite3-dev

echo "Getting source..."
SOURCE_TARBALL="https://python.org/ftp/python/${VERSION}/Python-${VERSION}.tgz"


echo "Building Pythonâ€¦"
curl -L $SOURCE_TARBALL | tar xz
mv Python-$VERSION src
cd src

./configure --prefix=$OUT_PREFIX --with-ensurepip=no
make
make install

# Remove unneeded test directories, similar to the official Docker Python images:
# https://github.com/docker-library/python
find "${OUT_PREFIX}" \( -type d -a \( -name test -o -name tests \) \) -exec rm -rf '{}' +

# Remove spare /
LOCATION=${OUT_PREFIX%?}

ln $LOCATION/bin/python3 $LOCATION/bin/python

# copy over sqlite3 headers
cp "/usr/include/sqlite3"* "$LOCATION/include/"

# create generic .so symlink against stack image
ln -s "/usr/lib/x86_64-linux-gnu/libsqlite3.so.0" "$LOCATION/lib/libsqlite3.so"
